<?php
// This script and data application was generated by AppGini, https://bigprof.com/appgini
// Download AppGini for free from https://bigprof.com/appgini/download/

	include_once(__DIR__ . '/lib.php');
	@include_once(__DIR__ . '/hooks/meetings_table.php');
	include_once(__DIR__ . '/meetings_table_dml.php');

	// mm: can the current member access this page?
	$perm = getTablePermissions('meetings_table');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'meetings_table';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`meetings_table`.`id`" => "id",
		"IF(    CHAR_LENGTH(`visiting_card_table1`.`id`), CONCAT_WS('',   `visiting_card_table1`.`id`), '') /* Visiting card details */" => "visiting_card_lookup",
		"IF(    CHAR_LENGTH(`event_table1`.`id`), CONCAT_WS('',   `event_table1`.`id`), '') /* Event Details */" => "event_lookup",
		"`meetings_table`.`meeting_title`" => "meeting_title",
		"`meetings_table`.`participants`" => "participants",
		"`meetings_table`.`venue`" => "venue",
		"if(`meetings_table`.`meeting_from_date`,date_format(`meetings_table`.`meeting_from_date`,'%d/%m/%Y'),'')" => "meeting_from_date",
		"if(`meetings_table`.`meeting_to_date`,date_format(`meetings_table`.`meeting_to_date`,'%d/%m/%Y'),'')" => "meeting_to_date",
		"`meetings_table`.`created_by`" => "created_by",
		"`meetings_table`.`created_at`" => "created_at",
		"`meetings_table`.`last_updated_by`" => "last_updated_by",
		"`meetings_table`.`last_updated_at`" => "last_updated_at",
		"`meetings_table`.`meetings_str`" => "meetings_str",
		"`meetings_table`.`tenant_id`" => "tenant_id",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`meetings_table`.`id`',
		2 => '`visiting_card_table1`.`id`',
		3 => '`event_table1`.`id`',
		4 => 4,
		5 => 5,
		6 => 6,
		7 => '`meetings_table`.`meeting_from_date`',
		8 => '`meetings_table`.`meeting_to_date`',
		9 => 9,
		10 => 10,
		11 => 11,
		12 => 12,
		13 => 13,
		14 => '`meetings_table`.`tenant_id`',
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`meetings_table`.`id`" => "id",
		"IF(    CHAR_LENGTH(`visiting_card_table1`.`id`), CONCAT_WS('',   `visiting_card_table1`.`id`), '') /* Visiting card details */" => "visiting_card_lookup",
		"IF(    CHAR_LENGTH(`event_table1`.`id`), CONCAT_WS('',   `event_table1`.`id`), '') /* Event Details */" => "event_lookup",
		"`meetings_table`.`meeting_title`" => "meeting_title",
		"`meetings_table`.`participants`" => "participants",
		"`meetings_table`.`venue`" => "venue",
		"if(`meetings_table`.`meeting_from_date`,date_format(`meetings_table`.`meeting_from_date`,'%d/%m/%Y'),'')" => "meeting_from_date",
		"if(`meetings_table`.`meeting_to_date`,date_format(`meetings_table`.`meeting_to_date`,'%d/%m/%Y'),'')" => "meeting_to_date",
		"`meetings_table`.`created_by`" => "created_by",
		"`meetings_table`.`created_at`" => "created_at",
		"`meetings_table`.`last_updated_by`" => "last_updated_by",
		"`meetings_table`.`last_updated_at`" => "last_updated_at",
		"`meetings_table`.`meetings_str`" => "meetings_str",
		"`meetings_table`.`tenant_id`" => "tenant_id",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`meetings_table`.`id`" => "ID",
		"IF(    CHAR_LENGTH(`visiting_card_table1`.`id`), CONCAT_WS('',   `visiting_card_table1`.`id`), '') /* Visiting card details */" => "Visiting card details",
		"IF(    CHAR_LENGTH(`event_table1`.`id`), CONCAT_WS('',   `event_table1`.`id`), '') /* Event Details */" => "Event Details",
		"`meetings_table`.`meeting_title`" => "Meeting title",
		"`meetings_table`.`participants`" => "Participants",
		"`meetings_table`.`venue`" => "Venue",
		"`meetings_table`.`meeting_from_date`" => "Meeting from date",
		"`meetings_table`.`meeting_to_date`" => "Meeting to date",
		"`meetings_table`.`created_by`" => "Created by",
		"`meetings_table`.`created_at`" => "Created at",
		"`meetings_table`.`last_updated_by`" => "Last updated by",
		"`meetings_table`.`last_updated_at`" => "Last updated at",
		"`meetings_table`.`meetings_str`" => "Meetings str",
		"`meetings_table`.`tenant_id`" => "Tenant ID",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`meetings_table`.`id`" => "id",
		"IF(    CHAR_LENGTH(`visiting_card_table1`.`id`), CONCAT_WS('',   `visiting_card_table1`.`id`), '') /* Visiting card details */" => "visiting_card_lookup",
		"IF(    CHAR_LENGTH(`event_table1`.`id`), CONCAT_WS('',   `event_table1`.`id`), '') /* Event Details */" => "event_lookup",
		"`meetings_table`.`meeting_title`" => "meeting_title",
		"`meetings_table`.`participants`" => "participants",
		"`meetings_table`.`venue`" => "venue",
		"if(`meetings_table`.`meeting_from_date`,date_format(`meetings_table`.`meeting_from_date`,'%d/%m/%Y'),'')" => "meeting_from_date",
		"if(`meetings_table`.`meeting_to_date`,date_format(`meetings_table`.`meeting_to_date`,'%d/%m/%Y'),'')" => "meeting_to_date",
		"`meetings_table`.`created_by`" => "created_by",
		"`meetings_table`.`created_at`" => "created_at",
		"`meetings_table`.`last_updated_by`" => "last_updated_by",
		"`meetings_table`.`last_updated_at`" => "last_updated_at",
		"`meetings_table`.`meetings_str`" => "meetings_str",
		"`meetings_table`.`tenant_id`" => "tenant_id",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['visiting_card_lookup' => 'Visiting card details', 'event_lookup' => 'Event Details', ];

	$x->QueryFrom = "`meetings_table` LEFT JOIN `visiting_card_table` as visiting_card_table1 ON `visiting_card_table1`.`id`=`meetings_table`.`visiting_card_lookup` LEFT JOIN `event_table` as event_table1 ON `event_table1`.`id`=`meetings_table`.`event_lookup` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = (getLoggedAdmin() !== false);
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->AllowAdminShowSQL = showSQL();
	$x->RecordsPerPage = 100;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'meetings_table_view.php';
	$x->TableTitle = 'Meetings - App';
	$x->TableIcon = 'table.gif';
	$x->PrimaryKey = '`meetings_table`.`id`';
	$x->DefaultSortField = '`meetings_table`.`meeting_to_date`';
	$x->DefaultSortDirection = 'desc';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['ID', 'Meeting title', 'Participants', 'Venue', 'Meeting from date', 'Meeting to date', 'Created by', 'Created at', 'Last updated by', 'Last updated at', 'Meetings str', 'Tenant ID', ];
	$x->ColFieldName = ['id', 'meeting_title', 'participants', 'venue', 'meeting_from_date', 'meeting_to_date', 'created_by', 'created_at', 'last_updated_by', 'last_updated_at', 'meetings_str', 'tenant_id', ];
	$x->ColNumber  = [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/meetings_table_templateTV.html';
	$x->SelectedTemplate = 'templates/meetings_table_templateTVS.html';
	$x->TemplateDV = 'templates/meetings_table_templateDV.html';
	$x->TemplateDVP = 'templates/meetings_table_templateDVP.html';

	$x->ShowTableHeader = 0;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = true;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: meetings_table_init
	$render = true;
	if(function_exists('meetings_table_init')) {
		$args = [];
		$render = meetings_table_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: meetings_table_header
	$headerCode = '';
	if(function_exists('meetings_table_header')) {
		$args = [];
		$headerCode = meetings_table_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once(__DIR__ . '/header.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/header.php');
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: meetings_table_footer
	$footerCode = '';
	if(function_exists('meetings_table_footer')) {
		$args = [];
		$footerCode = meetings_table_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once(__DIR__ . '/footer.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/footer.php');
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
